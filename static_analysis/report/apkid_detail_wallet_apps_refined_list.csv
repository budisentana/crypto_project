app_name,class_dex,types,matches
africa.bundle.mobile.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check']"
africa.bundle.mobile.app.apk,classes.dex,compiler,['r8 without marker (suspicious)']
africa.bundle.mobile.app.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
africa.bundle.mobile.app.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
africa.bundle.mobile.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
africa.bundle.mobile.app.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible VM check']"
africa.bundle.mobile.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
africa.buycoins.buycoinsx.basic.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'possible VM check']"
africa.buycoins.buycoinsx.basic.apk,classes.dex,compiler,['r8']
africa.buycoins.buycoinsx.basic.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
app.bitcoin.wallet.apk,error,error,error
app.goodcrypto.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
app.goodcrypto.apk,classes.dex,compiler,['r8']
app.goodcrypto.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
app.goodcrypto.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
app.goodcrypto.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
app.goodcrypto.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
app.goodcrypto.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
app.goodcrypto.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
app.hodlify.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check']"
app.hodlify.apk,classes.dex,compiler,['r8 without marker (suspicious)']
app.hodlify.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
app.odapplications.bitstashwallet.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
app.odapplications.bitstashwallet.apk,classes.dex,compiler,['r8']
app.odapplications.bitstashwallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
app.odapplications.bitstashwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
app.odapplications.bitstashwallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
appinventor.ai_mlmsolution88.Troquer.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.PRODUCT check', 'possible VM check']"
appinventor.ai_mlmsolution88.Troquer.apk,classes.dex,compiler,['dx (possible dexmerge)']
appinventor.ai_mlmsolution88.Troquer.apk,classes.dex,manipulator,['dexmerge']
appinventor.ai_Traid777.WALLETBTC.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.PRODUCT check', 'possible VM check']"
appinventor.ai_Traid777.WALLETBTC.apk,classes.dex,compiler,['dx']
appinventor.ai_Traid777.WALLETBTC.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
appinventor.ai_Traid777.WALLETBTC.apk,classes2.dex,compiler,['dx']
bitcoin.twenty.twenty.apk,classes.dex,compiler,['r8 without marker (suspicious)']
bitcoin.twenty.twenty.apk,classes2.dex,anti_vm,"['Build.TAGS check', 'possible ro.secure check']"
bitcoin.twenty.twenty.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
ca.merkley.starter.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
ca.merkley.starter.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
ca.merkley.starter.apk,classes.dex,compiler,['dx (possible dexmerge)']
ca.merkley.starter.apk,classes.dex,manipulator,['dexmerge']
cash.usdx.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'possible Build.SERIAL check']"
cash.usdx.wallet.apk,classes.dex,compiler,['r8']
cash.usdx.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
cash.usdx.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
cash.usdx.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
cash.usdx.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
co.bitx.android.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
co.bitx.android.wallet.apk,classes.dex,compiler,['r8']
co.bitx.android.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
co.bitx.android.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
co.bitx.android.wallet.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
co.bitx.android.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check']"
co.bitx.android.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
co.bitx.android.wallet.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'possible ro.secure check']"
co.bitx.android.wallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
co.hodlwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
co.hodlwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
co.hodlwallet.apk,classes.dex,compiler,['r8']
co.hodlwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
co.id.dompet.btc.indonesia.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
co.id.dompet.btc.indonesia.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
co.id.dompet.btc.indonesia.apk,classes.dex,compiler,['r8']
com.adb.adbcoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.adb.adbcoin.apk,classes.dex,compiler,['r8']
com.adb.adbcoin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.anxbtc.android.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check']"
com.anxbtc.android.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.anxbtc.android.apk,classes.dex,manipulator,['dexmerge']
com.app.asbazar59.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.app.asbazar59.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.app.asbazar59.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.DEVICE check']"
com.app.asbazar59.apk,classes.dex,compiler,['r8']
com.app.belfrics.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible VM check']"
com.app.belfrics.apk,classes.dex,compiler,['r8']
com.app.belfrics.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.app.belfrics.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.app.belfrics.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.application.bitcoiva.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.application.bitcoiva.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.application.bitcoiva.apk,classes.dex,compiler,['r8']
com.application.blocdesk.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.application.blocdesk.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.application.blocdesk.apk,classes.dex,compiler,['r8']
com.apptrack.coinom.apk,classes3.dex,compiler,['dexlib 2.x']
com.apptrack.coinom.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.apptrack.coinom.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible ro.secure check', 'possible VM check']"
com.apptrack.coinom.apk,classes2.dex,compiler,['dexlib 2.x']
com.apptrack.coinom.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check']"
com.apptrack.coinom.apk,classes.dex,compiler,['dexlib 2.x']
com.apptrack.coinom.apk,classes4.dex,compiler,['dexlib 2.x']
com.atomicwallet.newapp.safe.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.atomicwallet.newapp.safe.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.atomicwallet.newapp.safe.apk,classes.dex,compiler,['r8']
com.bcoiner.webviewapp.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
com.bcoiner.webviewapp.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.bcoiner.webviewapp.apk,classes.dex,manipulator,['dexmerge']
com.bitbns.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
com.bitbns.apk,classes.dex,compiler,['r8']
com.bitbns.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.bitbns.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.bitbns.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitbns.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.bitbns.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitbns.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.bitcoinglobal.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.bitcoinglobal.apk,classes.dex,compiler,['r8']
com.bitcoinglobal.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitcoinglobal.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.bitcoinglobal.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitcoininc.bitcoinpay.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check']"
com.bitcoininc.bitcoinpay.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.bitcoininc.bitcoinpay.apk,classes.dex,manipulator,['dexmerge']
com.bitexuae.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.bitexuae.apk,classes.dex,compiler,['r8']
com.bitexuae.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check']"
com.bitexuae.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitkub.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitkub.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
com.bitkub.apk,classes.dex,compiler,['r8']
com.bitkub.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitkub.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check']"
com.bitkub.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitkub.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.bitmart.bitmarket.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitmart.bitmarket.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'subscriber ID check', 'possible ro.secure check', 'emulator file check']"
com.bitmart.bitmarket.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.bitmart.bitmarket.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'device ID check', 'subscriber ID check', 'ro.kernel.qemu check', 'emulator file check']"
com.bitmart.bitmarket.apk,classes2.dex,compiler,['dx']
com.bitpay.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitpay.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check']"
com.bitpay.wallet.apk,classes.dex,compiler,['r8']
com.bitso.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitso.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check']"
com.bitso.wallet.apk,classes.dex,compiler,['r8']
com.bitso.wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.bitso.wallet.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check']"
com.bitso.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitvirya.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.bitvirya.app.apk,classes.dex,compiler,['r8']
com.bitvirya.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bityard.us2.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'subscriber ID check']"
com.bityard.us2.apk,classes.dex,compiler,['r8']
com.blockcloud.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.blockcloud.apk,classes.dex,compiler,['r8']
com.blockfi.mobile.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.blockfi.mobile.apk,classes.dex,compiler,['r8']
com.blockfi.mobile.apk,classes2.dex,compiler,['r8']
com.blockfi.mobile.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.blockfi.mobile.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.blockfolio.blockfolio.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.blockfolio.blockfolio.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check', 'possible VM check']"
com.blockfolio.blockfolio.apk,classes.dex,compiler,['r8']
com.blockfolio.blockfolio.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
com.blockfolio.blockfolio.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.blockfolio.blockfolio.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.blockfolio.blockfolio.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bokucoin.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
com.bokucoin.app.apk,classes.dex,compiler,['r8']
com.btcontract.wallettest.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.btcontract.wallettest.apk,classes.dex,compiler,['r8']
com.btcontract.wallettest.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.btcontract.wallettest.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.btcontract.wallettest.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.btcontract.wallettest.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.btcontract.wallettest.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.btcturk.pro.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.btcturk.pro.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check']"
com.btcturk.pro.apk,classes.dex,compiler,['r8']
com.btcturk.pro.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'network operator name check']"
com.btcturk.pro.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.btuprotocol.btu_wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.btuprotocol.btu_wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'network operator name check']"
com.btuprotocol.btu_wallet.apk,classes.dex,compiler,['r8']
com.btuprotocol.btu_wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.btuprotocol.btu_wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'network operator name check']"
com.btuprotocol.btu_wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.buda.crypto.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.buda.crypto.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.buda.crypto.apk,classes.dex,compiler,['r8']
com.burency.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.burency.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'possible ro.secure check', 'emulator file check']"
com.burency.app.apk,classes.dex,compiler,['r8']
com.burency.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'subscriber ID check', 'possible ro.secure check', 'emulator file check', 'possible VM check']"
com.burency.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.burency.app.apk,classes2.dex,obfuscator,['unreadable field names']
com.burency.app.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.burency.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.caramba.StellarWallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check']"
com.caramba.StellarWallet.apk,classes.dex,compiler,['r8']
com.caramba.StellarWallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.caramba.StellarWallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.caramba.StellarWallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.cloudmining.mineresp.apk,error,error,error
com.cobinhood.exchange.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.cobinhood.exchange.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.cobinhood.exchange.apk,classes.dex,compiler,['r8']
com.coinburp.mobile.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check', 'possible VM check']"
com.coinburp.mobile.apk,classes.dex,compiler,['r8']
com.coinburp.mobile.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.coinburp.mobile.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinburp.mobile.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.coinburp.mobile.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coindcx.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coindcx.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'possible VM check']"
com.coindcx.apk,classes.dex,compiler,['r8']
com.coindcx.btc.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coindcx.btc.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.coindcx.btc.apk,classes.dex,compiler,['r8']
com.coindcx.btc.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coindcx.btc.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible ro.secure check', 'possible VM check']"
com.coindcx.btc.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coindeal.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.coindeal.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.coindeal.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coindeal.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.coindeal.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coindeal.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.coinlist.trade.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinlist.trade.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.coinlist.trade.apk,classes.dex,compiler,['r8']
com.coinlist.trade.apk,classes2.dex,compiler,['r8']
com.coinmarket.android.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinmarket.android.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.coinmarket.android.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.coinmarket.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
com.coinmarket.android.apk,classes.dex,compiler,['r8']
com.coinmarket.android.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.coinmarket.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.coinmarket.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coinmarket.android.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinmarket.android.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.coinmarket.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.coinmarket.android.apk,classes4.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinmarket.android.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.coinmarket.android.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.coinmarket.android.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.coinmotion.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinmotion.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.coinmotion.apk,classes.dex,compiler,['r8']
com.coinmotion.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coinpaprika.coins.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinpaprika.coins.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
com.coinpaprika.coins.apk,classes.dex,compiler,['r8']
com.coinpaprika.coins.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.coinpaprika.coins.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coinpay.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinpay.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.coinpay.apk,classes.dex,compiler,['r8']
com.coinpoket.apk,classes2.dex,compiler,['dexlib 2.x']
com.coinpoket.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinpoket.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.coinpoket.apk,classes.dex,compiler,['dexlib 2.x']
com.CoinsBank.CoinsBank.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.CoinsBank.CoinsBank.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.CoinsBank.CoinsBank.apk,classes.dex,compiler,['r8']
com.CoinsBank.CoinsBank.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coinspot.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinspot.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'Build.TAGS check']"
com.coinspot.app.apk,classes.dex,compiler,['r8']
com.colodax.colodax.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.colodax.colodax.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.colodax.colodax.apk,classes.dex,compiler,['r8']
com.coolbitx.cwsapp.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.coolbitx.cwsapp.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.coolbitx.cwsapp.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.coolbitx.cwsapp.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coolbitx.cwsapp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.coolbitx.cwsapp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coolbitx.cwsapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.coolbitx.cwsapp.apk,classes.dex,compiler,['r8']
com.crypter.cryptocyrrency.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.crypter.cryptocyrrency.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.crypter.cryptocyrrency.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.crypter.cryptocyrrency.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.crypter.cryptocyrrency.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check']"
com.crypter.cryptocyrrency.apk,classes.dex,compiler,['r8']
com.crypter.cryptocyrrency.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.crypter.cryptocyrrency.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'network operator name check']"
com.crypter.cryptocyrrency.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.cryptocurrency.exchange.app.online.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'possible VM check']"
com.cryptocurrency.exchange.app.online.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.cryptocurrency.exchange.app.online.apk,classes.dex,manipulator,['dexmerge']
com.cryptocurrency.exchange.app.online.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'network operator name check']"
com.cryptocurrency.exchange.app.online.apk,classes3.dex,compiler,['dx (possible dexmerge)']
com.cryptocurrency.exchange.app.online.apk,classes3.dex,manipulator,['dexmerge']
com.cryptocurrency.exchange.app.online.apk,classes2.dex,compiler,['dx (possible dexmerge)']
com.cryptocurrency.exchange.app.online.apk,classes2.dex,manipulator,['dexmerge']
com.cryptocurrency.jtechtrade.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.cryptocurrency.jtechtrade.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.cryptocurrency.jtechtrade.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.cryptocurrency.jtechtrade.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check', 'possible VM check']"
com.cryptocurrency.jtechtrade.apk,classes.dex,compiler,['r8']
com.cryptocurrency.jtechtrade.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.cryptocurrency.jtechtrade.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'possible VM check']"
com.cryptocurrency.jtechtrade.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.cryptocurrency.jtechtrade.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.cryptocurrency.jtechtrade.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.cryptooriented.exchanges.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'network operator name check']"
com.cryptooriented.exchanges.apk,classes.dex,compiler,['dx']
com.currency.exchange.prod2.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.currency.exchange.prod2.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check']"
com.currency.exchange.prod2.apk,classes.dex,compiler,['r8']
com.czprime.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.czprime.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.czprime.apk,classes.dex,compiler,['r8']
com.czprime.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
com.czprime.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.digifinex.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'subscriber ID check']"
com.digifinex.app.apk,classes.dex,compiler,['r8']
com.digifinex.app.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.digifinex.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'subscriber ID check', 'emulator file check']"
com.digifinex.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.digifinex.app.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.digifinex.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.digifinex.app.apk,lib/arm64-v8a/libsgmain.so!classes.dex,anti_vm,['subscriber ID check']
com.digifinex.app.apk,lib/arm64-v8a/libsgmain.so!classes.dex,compiler,['dx']
com.digifinex.app.apk,lib/arm64-v8a/libsgsecuritybody.so!classes.dex,compiler,['dx']
com.digifinex.app.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,anti_vm,['subscriber ID check']
com.digifinex.app.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,compiler,['dx']
com.digifinex.app.apk,lib/armeabi-v7a/libsgsecuritybody.so!classes.dex,compiler,['dx']
com.dmaxwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.dmaxwallet.apk,classes.dex,compiler,['r8']
com.dmaxwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.doge.dex.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
com.doge.dex.apk,classes.dex,compiler,['r8']
com.dsdaq.mobiletrader.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.dsdaq.mobiletrader.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check']"
com.dsdaq.mobiletrader.apk,classes.dex,compiler,['r8']
com.emberfund.ember.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check']"
com.emberfund.ember.apk,classes.dex,compiler,['r8']
com.emberfund.ember.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
com.emberfund.ember.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.escrowspace.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.escrowspace.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.escrowspace.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.escrowspace.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.evercoin.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.evercoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.evercoin.apk,classes.dex,compiler,['r8']
com.evercoin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.evraon.trading.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.evraon.trading.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.evraon.trading.apk,classes.dex,compiler,['r8']
com.evraon.trading.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.evraon.trading.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.evraon.trading.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.evraon.trading.apk,classes2.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.exmo.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'ro.kernel.qemu check']"
com.exmo.apk,classes.dex,compiler,['r8']
com.exmo.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.exmo.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.exmo.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.exmo.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.exmo.apk,classes4.dex,obfuscator,['unreadable field names']
com.exmo.apk,classes5.dex,anti_vm,['Build.MANUFACTURER check']
com.exmo.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.exmo.apk,classes6.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.exmo.apk,classes6.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.exmo.apk,classes6.dex,compiler,['r8 without marker (suspicious)']
com.exmo.apk,classes7.dex,compiler,['r8 without marker (suspicious)']
com.exmo.apk,classes8.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.exmo.apk,classes8.dex,compiler,['r8 without marker (suspicious)']
com.exmo.apk,classes9.dex,compiler,['r8 without marker (suspicious)']
com.farhadmarket.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.farhadmarket.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.farhadmarket.app.apk,classes.dex,compiler,['r8']
com.farhadmarket.app.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check']"
com.farhadmarket.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.farhadmarket.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.flashift.flashift.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.flashift.flashift.apk,classes.dex,compiler,['r8']
com.flashift.flashift.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
com.flashift.flashift.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.flitaa.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.flitaa.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check']"
com.flitaa.app.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.fluidcoins.fluidcoins.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.fluidcoins.fluidcoins.apk,classes.dex,compiler,['r8']
com.fluidcoins.fluidcoins.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.fluidcoins.fluidcoins.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.fluidcoins.fluidcoins.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.flutter.litebit.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.flutter.litebit.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.flutter.litebit.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.flutter.litebit.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.flutter.litebit.apk,classes2.dex,compiler,['dx']
com.flutter.litebit.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.flutter.litebit.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.flutter.litebit.apk,classes3.dex,compiler,['dx']
com.friendst.strangr.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.friendst.strangr.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.friendst.strangr.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.friendst.strangr.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.product.device check', 'ro.kernel.qemu check', 'possible ro.secure check', 'emulator file check']"
com.friendst.strangr.apk,classes.dex,compiler,['r8']
com.friendst.strangr.apk,classes2.dex,anti_vm,"['SIM operator check', 'network operator name check', 'subscriber ID check']"
com.friendst.strangr.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.g3shanappz.claimerbox.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.g3shanappz.claimerbox.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.g3shanappz.claimerbox.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.g3shanappz.claimerbox.apk,classes.dex,manipulator,['dexmerge']
com.gemini.android.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.gemini.android.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.gemini.android.app.apk,classes.dex,compiler,['r8']
com.gemini.android.app.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.gemini.android.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.gemini.android.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.gemini.android.app.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.gemini.android.app.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check', 'possible VM check']"
com.gemini.android.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.giottus.giottus_mobile.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.giottus.giottus_mobile.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check']"
com.giottus.giottus_mobile.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.holacoins.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.holacoins.wallet.apk,classes.dex,compiler,['r8']
com.idbtec.otppaycrypto.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.idbtec.otppaycrypto.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.idbtec.otppaycrypto.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.instantcoins.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.instantcoins.apk,classes.dex,compiler,['r8']
com.ixx_android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'subscriber ID check']"
com.ixx_android.apk,classes.dex,compiler,['r8']
com.ixx_android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible ro.secure check', 'emulator file check']"
com.ixx_android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.ixx_android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.ixx_android.apk,lib/arm64-v8a/libsgmain.so!classes.dex,anti_vm,['subscriber ID check']
com.ixx_android.apk,lib/arm64-v8a/libsgmain.so!classes.dex,compiler,['dx']
com.ixx_android.apk,lib/arm64-v8a/libsgnocaptcha.so!classes.dex,compiler,['dx']
com.ixx_android.apk,lib/arm64-v8a/libsgsecuritybody.so!classes.dex,compiler,['dx']
com.ixx_android.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,anti_vm,['subscriber ID check']
com.ixx_android.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,compiler,['dx']
com.ixx_android.apk,lib/armeabi-v7a/libsgnocaptcha.so!classes.dex,compiler,['dx']
com.ixx_android.apk,lib/armeabi-v7a/libsgsecuritybody.so!classes.dex,compiler,['dx']
com.ixx_android.apk,lib/armeabi/libsgmain.so!classes.dex,anti_vm,['subscriber ID check']
com.ixx_android.apk,lib/armeabi/libsgmain.so!classes.dex,compiler,['dx']
com.ixx_android.apk,lib/armeabi/libsgnocaptcha.so!classes.dex,compiler,['dx']
com.ixx_android.apk,lib/armeabi/libsgsecuritybody.so!classes.dex,compiler,['dx']
com.jex.trade.apk,,packer,['Jiagu']
com.jex.trade.apk,classes.dex,compiler,['dexlib 2.x']
com.kinesis.kinesisapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
com.kinesis.kinesisapp.apk,classes.dex,compiler,['r8']
com.kinesis.kinesisapp.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.kinesis.kinesisapp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.kinesis.kinesisapp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.kinesis.kinesisapp.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'network operator name check']"
com.kinesis.kinesisapp.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.kinesis.kinesisapp.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.koinkoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.koinkoin.apk,classes.dex,compiler,['r8']
com.koinkoin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.koinstrap.koinstrap.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.koinstrap.koinstrap.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.koinstrap.koinstrap.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.koinstrap.koinstrap.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check', 'possible VM check']"
com.koinstrap.koinstrap.apk,classes.dex,compiler,['r8']
com.koinstrap.koinstrap.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.koinstrap.koinstrap.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.litecoinplus.androidwallet.apk,classes.dex,compiler,['r8']
com.maicoin.max.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.maicoin.max.apk,classes.dex,compiler,['r8']
com.maicoin.max.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.maicoin.max.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.maicoin.max.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.matrixport.mark.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.matrixport.mark.apk,classes.dex,compiler,['r8']
com.matrixport.mark.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.matrixport.mark.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.matrixport.mark.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.matrixport.mark.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.matrixport.mark.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check']"
com.matrixport.mark.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.monnos.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check']"
com.monnos.android.apk,classes.dex,compiler,['r8']
com.monnos.android.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.monnos.android.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.monnos.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.monnos.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.monnos.android.apk,classes4.dex,anti_vm,['Build.MANUFACTURER check']
com.monnos.android.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.monnos.android.apk,classes5.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.monnos.android.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.mycontainer.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.mycontainer.apk,classes.dex,compiler,['r8']
com.mycontainer.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.nakitcoins.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.nakitcoins.wallet.apk,classes.dex,compiler,['r8']
com.nakitcoins.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
com.nakitcoins.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.net_cents.netcents2.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.net_cents.netcents2.apk,classes.dex,compiler,['r8']
com.net_cents.netcents2.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
com.net_cents.netcents2.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.net_cents.netcents2.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'network operator name check']"
com.net_cents.netcents2.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.newgo.coincola.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'Build.BOARD check', 'SIM operator check', 'network operator name check']"
com.newgo.coincola.apk,classes.dex,compiler,['r8']
com.newgo.coincola.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.newgo.coincola.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check']"
com.newgo.coincola.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.newgo.coincola.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'device ID check', 'subscriber ID check']"
com.newgo.coincola.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.nexowallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.nexowallet.apk,classes.dex,compiler,['r8']
com.nexowallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.nexowallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.nexowallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.nobillio.coinbaazar.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.nobillio.coinbaazar.apk,classes.dex,compiler,['r8']
com.nobillio.coinbaazar.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
com.nobillio.coinbaazar.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.nobillio.coinbaazar.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.nobillio.coinbaazar.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.node.coindirect.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.node.coindirect.apk,classes.dex,compiler,['r8']
com.node.coindirect.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.nova.dax.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
com.nova.dax.apk,classes.dex,compiler,['r8']
com.nova.dax.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.nova.dax.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.nova.dax.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.nova.dax.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.nova.dax.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.nova.dax.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.nova.dax.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.okinc.okex.gp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'device ID check', 'subscriber ID check', 'ro.kernel.qemu check', 'possible ro.secure check', 'emulator file check']"
com.okinc.okex.gp.apk,classes.dex,compiler,['r8']
com.okinc.okex.gp.apk,classes10.dex,anti_vm,['Build.MANUFACTURER check']
com.okinc.okex.gp.apk,classes10.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes11.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes12.dex,anti_vm,['possible Build.SERIAL check']
com.okinc.okex.gp.apk,classes12.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes13.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes14.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes15.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes16.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes17.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes18.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'subscriber ID check']"
com.okinc.okex.gp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible ro.secure check', 'emulator file check']"
com.okinc.okex.gp.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'possible ro.secure check', 'emulator file check']"
com.okinc.okex.gp.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes5.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check']"
com.okinc.okex.gp.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes6.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.okinc.okex.gp.apk,classes6.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible VM check']"
com.okinc.okex.gp.apk,classes6.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes7.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.okinc.okex.gp.apk,classes7.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes8.dex,compiler,['r8 without marker (suspicious)']
com.okinc.okex.gp.apk,classes9.dex,compiler,['r8 without marker (suspicious)']
com.panaeshacapital.pcex.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.panaeshacapital.pcex.apk,classes.dex,compiler,['r8']
com.panaeshacapital.pcex.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.panaeshacapital.pcex.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.payperless.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'ro.kernel.qemu check']"
com.payperless.wallet.apk,classes.dex,compiler,['r8']
com.payperless.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.payperless.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.payplux.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.payplux.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.payplux.apk,classes.dex,compiler,['r8']
com.payplux.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.payplux.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
com.payplux.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.payplux.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.payplux.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.payplux.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.payscript.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.payscript.apk,classes.dex,compiler,['r8']
com.payscript.apk,classes2.dex,compiler,['r8']
com.phemex.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.phemex.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check', 'possible VM check']"
com.phemex.app.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.phemex.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.phemex.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check']"
com.phemex.app.apk,classes2.dex,compiler,['dx']
com.plasmapay.androidapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.plasmapay.androidapp.apk,classes.dex,compiler,['r8']
com.plasmapay.androidapp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.plasmapay.androidapp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.plasmapay.androidapp.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.plasmapay.androidapp.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.plasmapay.androidapp.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.plasmapay.androidapp.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.plasmapay.androidapp.apk,classes5.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.plasmapay.androidapp.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.plasmapay.androidapp.apk,classes6.dex,compiler,['r8 without marker (suspicious)']
com.plasmapay.androidapp.apk,classes7.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check']"
com.plasmapay.androidapp.apk,classes7.dex,compiler,['r8 without marker (suspicious)']
com.plunien.poloniex.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.plunien.poloniex.apk,classes.dex,compiler,['r8']
com.plunien.poloniex.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.plunien.poloniex.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'possible VM check']"
com.plunien.poloniex.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.plunien.poloniex.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.plunien.poloniex.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.plunien.poloniex.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check']"
com.plunien.poloniex.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.pointpay.bank.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.pointpay.bank.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.pointpay.bank.apk,classes.dex,compiler,['r8']
com.pointpay.bank.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.polispay.copay.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.polispay.copay.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check']"
com.polispay.copay.apk,classes.dex,compiler,['r8']
com.profittrading.forcoinbase.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.profittrading.forcoinbase.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.profittrading.forcoinbase.apk,classes.dex,compiler,['r8']
com.qsoft.mybtc.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.qsoft.mybtc.apk,classes.dex,compiler,['r8']
com.qubris.freecryptofaucet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.DEVICE check']"
com.qubris.freecryptofaucet.apk,classes.dex,compiler,['r8']
com.quidax.app.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.quidax.app.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.quidax.app.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.quidax.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check', 'possible VM check']"
com.quidax.app.apk,classes.dex,compiler,['r8']
com.quidax.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.quidax.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.remint.app.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.remint.app.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.remint.app.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.remint.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check']"
com.remint.app.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.remint.app.apk,classes2.dex,compiler,['dx']
com.remitano.remitano.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.remitano.remitano.apk,classes.dex,compiler,['r8']
com.remitano.remitano.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.remitano.remitano.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.remitano.remitano.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.remitano.remitano.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.saltlending.mobile.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.saltlending.mobile.apk,classes.dex,compiler,['r8']
com.saltlending.mobile.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.saltlending.mobile.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.saltlending.mobile.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.saltlending.mobile.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.saltlending.mobile.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.saltlending.mobile.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.saltlending.mobile.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.sculptech.dtrax.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.sculptech.dtrax.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.sculptech.dtrax.apk,classes.dex,compiler,['r8']
com.sencoinex.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.sencoinex.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.sencoinex.android.apk,classes.dex,compiler,['r8']
com.sencoinex.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.shapeshift.droid_shapeshift.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.shapeshift.droid_shapeshift.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.shapeshift.droid_shapeshift.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.shapeshift.droid_shapeshift.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.shapeshift.droid_shapeshift.apk,classes2.dex,compiler,['dx']
com.silvercoinvaluerpro.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.TAGS check']"
com.silvercoinvaluerpro.apk,classes.dex,compiler,['r8']
com.silvercoinvaluerpro.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
com.silvercoinvaluerpro.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.skyewallet.skye_wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check']"
com.skyewallet.skye_wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.stocksexchange.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.stocksexchange.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.stocksexchange.android.apk,classes.dex,compiler,['r8']
com.stocksexchange.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'possible Build.SERIAL check']"
com.stocksexchange.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.studentcoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.studentcoin.apk,classes.dex,compiler,['r8']
com.studentcoin.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.studentcoin.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.studentcoin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.supremexchange.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.supremexchange.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.supremexchange.apk,classes.dex,compiler,['r8']
com.titan.coin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'SIM operator check']"
com.titan.coin.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.viabtc.pool.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'subscriber ID check', 'possible ro.secure check', 'emulator file check']"
com.viabtc.pool.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.viabtc.pool.apk,lib/arm64-v8a/libumeng-spy.so,anti_vm,['emulator file check']
com.viabtc.pool.apk,lib/x86/libumeng-spy.so,anti_vm,['emulator file check']
com.wallet.ela.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.wallet.ela.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.wallet.ela.apk,classes.dex,compiler,['r8']
com.wallet.ela.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.whitebit.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.whitebit.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'possible ro.secure check']"
com.whitebit.android.apk,classes.dex,compiler,['r8']
com.whitebit.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.whitebit.android.apk,classes3.dex,compiler,['r8']
com.wrx.wazirx.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.wrx.wazirx.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
com.wrx.wazirx.apk,classes.dex,compiler,['r8']
com.wrx.wazirx.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.wrx.wazirx.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.wswap.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'SIM operator check']"
com.wswap.wallet.apk,classes.dex,compiler,['r8']
com.wswap.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.wswap.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.wswap.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.wswap.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'network operator name check', 'possible VM check']"
com.wswap.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.wswap.wallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.wswap.wallet.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.xbond.exchange.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.xbond.exchange.apk,classes.dex,compiler,['r8']
com.xbond.exchange.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.yamishibai.easycryptowallet123.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.yamishibai.easycryptowallet123.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.yamishibai.easycryptowallet123.apk,classes.dex,compiler,['r8']
com.zenafinance.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.zenafinance.apk,classes.dex,compiler,['r8']
com.zenafinance.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
crypto.cc.atc.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'network operator name check']"
crypto.cc.atc.apk,classes.dex,compiler,['dx']
crypto.cc.atc.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check']"
crypto.cc.atc.apk,classes2.dex,compiler,['dx']
crypto.wallet.chainapp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
crypto.wallet.chainapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
crypto.wallet.chainapp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
de.schildbach.wallet.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
de.schildbach.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
finance.earna.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
finance.earna.app.apk,classes.dex,compiler,['unknown (please file detection issue!)']
i.brains.pandax.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'SIM operator check', 'network operator name check', 'ro.kernel.qemu check']"
i.brains.pandax.apk,classes.dex,compiler,['r8']
i.brains.pandax.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
i.brains.pandax.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
i.brains.pandax.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
i.brains.pandax.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
i.brains.pandax.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
im.yitoken.app.g2.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check']"
im.yitoken.app.g2.apk,classes.dex,compiler,['unknown (please file detection issue!)']
io.bincap.exchange.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.bincap.exchange.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
io.bincap.exchange.apk,classes.dex,compiler,['r8']
io.bincap.exchange.apk,classes.dex,obfuscator,['unreadable field names']
io.bincap.exchange.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.bolt.mibwallet.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'possible VM check']"
io.bolt.mibwallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
io.bolt.mibwallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.bolt.mibwallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
io.bolt.mibwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.cex.app.prod.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
io.cex.app.prod.apk,classes.dex,compiler,['r8']
io.cex.app.prod.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.cex.app.prod.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
io.cex.app.prod.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.cex.app.prod.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check']"
io.cex.app.prod.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
io.cex.app.prod.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
io.cex.app.prod.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
io.cex.app.prod.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
io.exaking.starter.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.exaking.starter.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check']"
io.exaking.starter.apk,classes.dex,compiler,['dx (possible dexmerge)']
io.exaking.starter.apk,classes.dex,manipulator,['dexmerge']
io.kriptomat.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
io.kriptomat.app.apk,classes.dex,compiler,['r8']
io.kriptomat.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
io.kriptomat.app.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.kriptomat.app.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
io.kriptomat.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.kriptomat.app.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.kriptomat.app.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check']"
io.kriptomat.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
io.kriptomat.app.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
io.metamask.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'possible VM check']"
io.metamask.apk,classes.dex,compiler,['r8']
io.metamask.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.metamask.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
io.metamask.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.metamask.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
io.metamask.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
io.nash.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'SIM operator check']"
io.nash.app.apk,classes.dex,compiler,['r8']
io.nash.app.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.TAGS check']"
io.nash.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.nash.app.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
io.nash.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
io.nash.app.apk,classes4.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.nash.app.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
io.nash.app.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
io.rscoins.network.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
io.rscoins.network.apk,classes.dex,compiler,['r8']
io.rscoins.network.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
io.rscoins.network.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.uun.clet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.uun.clet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
io.uun.clet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
io.uun.clet.apk,classes2.dex,compiler,['dx']
io.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'subscriber ID check', 'emulator file check', 'possible VM check']"
io.wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
io.wallet.apk,classes2.dex,anti_vm,"['Build.BOARD check', 'possible Build.SERIAL check']"
io.wallet.apk,classes2.dex,compiler,['dx']
io.yellowcard.app.apk,classes.dex,compiler,['r8']
it.airgap.vault.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
it.airgap.vault.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible ro.secure check']"
it.airgap.vault.apk,classes.dex,compiler,['r8']
latoken.kucoin.trustapp.zebpay.coinmarketcap.coindcx.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
latoken.kucoin.trustapp.zebpay.coinmarketcap.coindcx.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
latoken.kucoin.trustapp.zebpay.coinmarketcap.coindcx.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
latoken.kucoin.trustapp.zebpay.coinmarketcap.coindcx.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check']"
latoken.kucoin.trustapp.zebpay.coinmarketcap.coindcx.apk,classes.dex,compiler,['r8']
latoken.kucoin.trustapp.zebpay.coinmarketcap.coindcx.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
latoken.kucoin.trustapp.zebpay.coinmarketcap.coindcx.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
me.coinpal.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
me.coinpal.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
me.coinpal.app.apk,classes.dex,compiler,['dx (possible dexmerge)']
me.coinpal.app.apk,classes.dex,manipulator,['dexmerge']
me.cryptopay.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
me.cryptopay.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'subscriber ID check', 'ro.kernel.qemu check', 'possible ro.secure check']"
me.cryptopay.android.apk,classes.dex,compiler,['r8']
me.cryptopay.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'network operator name check', 'possible ro.secure check']"
me.cryptopay.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
net.bitbay.bitcoin.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
net.bitbay.bitcoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
net.bitbay.bitcoin.apk,classes.dex,compiler,['r8']
net.bitbay.bitcoin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
net.bitcoinrevolution.bitcoin.cash.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
net.bitcoinrevolution.bitcoin.cash.wallet.apk,classes.dex,compiler,['dx']
net.bitstamp.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
net.bitstamp.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check']"
net.bitstamp.app.apk,classes.dex,compiler,['r8']
net.bitstamp.app.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check']"
net.bitstamp.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
net.iconomi.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
net.iconomi.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
net.iconomi.android.apk,classes.dex,compiler,['r8']
net.iconomi.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
net.tendancesbitcoin.free.bitcoin.bch.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
net.tendancesbitcoin.free.bitcoin.bch.wallet.apk,classes.dex,compiler,['dx']
network.xyo.coin.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
network.xyo.coin.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
network.xyo.coin.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
network.xyo.coin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check', 'possible VM check']"
network.xyo.coin.apk,classes.dex,compiler,['r8']
network.xyo.coin.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
network.xyo.coin.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
network.xyo.coin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
network.xyo.coin.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
network.xyo.coin.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
network.xyo.coin.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
network.xyo.coin.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'emulator file check']"
network.xyo.coin.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
new.rich.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
new.rich.wallet.apk,classes2.dex,anti_vm,"['Build.TAGS check', 'possible ro.secure check']"
new.rich.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.coinid.vault.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.coinid.vault.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
org.coinid.vault.apk,classes.dex,compiler,['r8']
org.cryptoblastersltd.bitcoin.wallet.account.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
org.cryptoblastersltd.bitcoin.wallet.account.apk,classes.dex,compiler,['dx']
org.cryptoforecast.free.bitcoin.cash.wallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
org.cryptoforecast.free.bitcoin.cash.wallet.app.apk,classes.dex,compiler,['dx']
org.cryptosignals.bitcoin.free.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
org.cryptosignals.bitcoin.free.wallet.apk,classes.dex,compiler,['dx']
org.cryptosignals.bitcoin.free.wallet1.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
org.cryptosignals.bitcoin.free.wallet1.apk,classes.dex,compiler,['dx']
org.cryptosignals.free.bitcoin.cash.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
org.cryptosignals.free.bitcoin.cash.wallet.apk,classes.dex,compiler,['dx']
org.deuscoin.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.deuscoin.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
org.deuscoin.wallet.apk,classes.dex,compiler,['dx (possible dexmerge)']
org.deuscoin.wallet.apk,classes.dex,manipulator,['dexmerge']
org.nativescript.mywallets.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check']"
org.nativescript.mywallets.apk,classes.dex,compiler,['r8']
org.nativescript.mywallets.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.qbita.bitcoin_wallet.apk,classes.dex,compiler,['r8']
org.strayacoin.bitcoinpos.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.strayacoin.bitcoinpos.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
org.strayacoin.bitcoinpos.apk,classes.dex,compiler,['r8']
org.strayacoin.bitcoinpos.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.strayacoin.litecoinpos.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.strayacoin.litecoinpos.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
org.strayacoin.litecoinpos.apk,classes.dex,compiler,['r8']
org.strayacoin.litecoinpos.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.tronspace.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.tronspace.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
org.tronspace.android.apk,classes.dex,compiler,['r8']
paydeepp.elegro.io.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
paydeepp.elegro.io.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check']"
paydeepp.elegro.io.apk,classes.dex,compiler,['r8']
roseon.finance.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'subscriber ID check']"
roseon.finance.apk,classes.dex,compiler,['r8']
roseon.finance.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
roseon.finance.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
roseon.finance.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
roseon.finance.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
starlab.studios.cryptowallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check']"
starlab.studios.cryptowallet.apk,classes.dex,compiler,['r8']
tech.central.ctocoin.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
tech.central.ctocoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
tech.central.ctocoin.apk,classes.dex,compiler,['unknown (please file detection issue!)']
tech.central.ctocoin.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
tech.central.ctocoin.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
tech.central.ctocoin.apk,classes2.dex,compiler,['dx']
urubit.uwallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'SIM operator check']"
urubit.uwallet.app.apk,classes.dex,compiler,['r8']
urubit.uwallet.app.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
urubit.uwallet.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
urubit.uwallet.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
urubit.uwallet.app.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
urubit.uwallet.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
urubit.uwallet.app.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.vidulumwallet.app.apk,classes.dex,compiler,['dexlib 2.x']
com.cryonik.webview.apk,classes.dex,compiler,['r8']
com.Bitplicity.Bitplicityapp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.Bitplicity.Bitplicityapp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
za.co.rockwallet.apk,classes.dex,compiler,['r8']
com.hamrasta.hwallet.apk,classes.dex,compiler,['r8']
hodl.group.xrpio.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'network operator name check']"
hodl.group.xrpio.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.fitbobcat.litecoinplus.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.fitbobcat.litecoinplus.apk,classes.dex,manipulator,['dexmerge']
com.bitbar.androidwallet.apk,classes.dex,compiler,['r8']
com.fluttercoin.androidwallet.apk,classes.dex,compiler,['r8']
com.bitcoinscrypt.androidwallet.apk,classes.dex,compiler,['r8']
com.bitcoinfast.androidwallet.apk,classes.dex,compiler,['r8']
com.magnum.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.magnum.wallet.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.magnum.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
pt.ipleiria.estg.dei.yabw.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
pt.ipleiria.estg.dei.yabw.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
pt.ipleiria.estg.dei.yabw.apk,classes.dex,compiler,['dx (possible dexmerge)']
pt.ipleiria.estg.dei.yabw.apk,classes.dex,manipulator,['dexmerge']
de.schildbach.wallet.goldcoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
de.schildbach.wallet.goldcoin.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.thinkdevs.cryptomarket.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check']"
com.thinkdevs.cryptomarket.apk,classes.dex,compiler,['unknown (please file detection issue!)']
appinventor.ai_oldgoldmen.CryptoWallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.PRODUCT check', 'possible VM check']"
appinventor.ai_oldgoldmen.CryptoWallet.apk,classes.dex,compiler,['dx']
appinventor.ai_oldgoldmen.CryptoWallet.apk,classes.dex,obfuscator,['unreadable field names']
appinventor.ai_oldgoldmen.CryptoWallet.apk,classes2.dex,compiler,['dx']
io.crypto.wallet.bitcoin.ethereum.medooza.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
io.crypto.wallet.bitcoin.ethereum.medooza.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.altcoin.wallet.apk,classes.dex,compiler,['r8']
com.factwallet.crypto.factwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.factwallet.crypto.factwallet.apk,classes.dex,compiler,['r8']
com.simple.crypto.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.DEVICE check']"
com.simple.crypto.wallet.apk,classes.dex,compiler,['r8']
info.mysecurewallet.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
info.mysecurewallet.wallet.apk,classes.dex,compiler,['r8']
org.coinsence.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.coinsence.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
org.coinsence.wallet.apk,classes.dex,compiler,['r8']
com.lynengine.beautycryptowallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.lynengine.beautycryptowallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.DEVICE check']"
com.lynengine.beautycryptowallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.bitcoin.wallet.cryptopuce.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.bitcoin.wallet.cryptopuce.apk,classes.dex,compiler,['r8']
de.langerhans.wallet.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
de.langerhans.wallet.apk,classes.dex,compiler,['r8']
net.bither.apk,classes.dex,compiler,['dx']
com.cryptowallet.si.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.cryptowallet.si.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.cryptowallet.si.apk,classes.dex,compiler,['r8']
co.ethv2.apk,classes.dex,compiler,['r8']
com.lightning.walletapp.apk,classes.dex,anti_vm,['Build.PRODUCT check']
com.lightning.walletapp.apk,classes.dex,compiler,['dx']
com.lightning.walletapp.apk,classes2.dex,compiler,['dx']
com.visionwallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.visionwallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.visionwallet.app.apk,classes.dex,compiler,['r8']
net.ethylyte.com.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
net.ethylyte.com.apk,classes.dex,compiler,['r8']
net.ethylyte.com.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.ankerpay.wallet.apk,classes.dex,compiler,['r8']
com.coinspace.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinspace.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check']"
com.coinspace.app.apk,classes.dex,compiler,['r8']
gbbit.app.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
gbbit.app.wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.newcurrency.coinstrunk.v1.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.newcurrency.coinstrunk.v1.apk,classes.dex,anti_vm,['Build.TAGS check']
com.newcurrency.coinstrunk.v1.apk,classes.dex,compiler,['r8']
cash.simply.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
cash.simply.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
cash.simply.wallet.apk,classes.dex,compiler,['r8']
com.paytomat.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.paytomat.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check', 'possible VM check']"
com.paytomat.apk,classes.dex,compiler,['r8']
com.paytomat.apk,classes.dex,obfuscator,['DexGuard']
com.paytomat.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
crypto.stars.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
crypto.stars.wallet.apk,classes2.dex,anti_vm,"['Build.TAGS check', 'possible ro.secure check']"
crypto.stars.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
eth.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
eth.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
eth.org.freewallet.app.apk,classes.dex,compiler,['r8']
eth.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
nxt.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
nxt.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
nxt.org.freewallet.app.apk,classes.dex,compiler,['r8']
nxt.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
xmr.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
xmr.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
xmr.org.freewallet.app.apk,classes.dex,compiler,['r8']
xmr.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
btc.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
btc.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
btc.org.freewallet.app.apk,classes.dex,compiler,['r8']
btc.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
xrp.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
xrp.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
xrp.org.freewallet.app.apk,classes.dex,compiler,['r8']
xrp.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.luneswallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'possible Build.SERIAL check']"
com.luneswallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
usdt.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
usdt.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
usdt.org.freewallet.app.apk,classes.dex,compiler,['r8']
usdt.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
io.smartholdem.client.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.smartholdem.client.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
io.smartholdem.client.apk,classes.dex,compiler,['r8']
com.caramba.RippleWallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check']"
com.caramba.RippleWallet.apk,classes.dex,compiler,['r8']
com.caramba.RippleWallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.caramba.RippleWallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.caramba.RippleWallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
neo.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
neo.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
neo.org.freewallet.app.apk,classes.dex,compiler,['r8']
neo.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
trx.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
trx.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
trx.org.freewallet.app.apk,classes.dex,compiler,['r8']
trx.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
bcn.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
bcn.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
bcn.org.freewallet.app.apk,classes.dex,compiler,['r8']
bcn.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
eos.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
eos.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
eos.org.freewallet.app.apk,classes.dex,compiler,['r8']
eos.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
ltcc.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
ltcc.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
ltcc.org.freewallet.app.apk,classes.dex,compiler,['r8']
ltcc.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
bcc.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
bcc.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
bcc.org.freewallet.app.apk,classes.dex,compiler,['r8']
bcc.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
tech.vontech.blockchain.jetoken.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
tech.vontech.blockchain.jetoken.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
tech.vontech.blockchain.jetoken.apk,classes.dex,compiler,['r8']
com.lkrcoin.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.lkrcoin.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
btg.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
btg.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
btg.org.freewallet.app.apk,classes.dex,compiler,['r8']
btg.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
app.codecellar.embitwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
app.codecellar.embitwallet.apk,classes.dex,compiler,['r8']
app.codecellar.embitwallet.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
app.codecellar.embitwallet.apk,classes2.dex,compiler,['dx']
doge.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
doge.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
doge.org.freewallet.app.apk,classes.dex,compiler,['r8']
doge.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
org.walleth.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'possible ro.secure check']"
org.walleth.apk,classes.dex,compiler,['r8']
org.walleth.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
org.walleth.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.melis.clientwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.melis.clientwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
io.melis.clientwallet.apk,classes.dex,compiler,['r8']
com.skycoin.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.skycoin.wallet.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.skycoin.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
io.deviantcoin.android.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check']"
io.deviantcoin.android.apk,classes.dex,compiler,['dx']
com.kipcoinProject.kipcoinwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.DEVICE check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.kipcoinProject.kipcoinwallet.apk,classes.dex,compiler,['r8']
augstrain.asn.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
augstrain.asn.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
augstrain.asn.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
augstrain.asn.apk,classes.dex,anti_disassembly,['illegal class name']
augstrain.asn.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'ro.product.device check', 'ro.kernel.qemu check', 'possible ro.secure check', 'emulator file check']"
augstrain.asn.apk,classes.dex,compiler,['r8 without marker (suspicious)']
augstrain.asn.apk,classes2.dex,anti_vm,['network operator name check']
augstrain.asn.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitlox.mobilewallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitlox.mobilewallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.bitlox.mobilewallet.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.bitlox.mobilewallet.apk,classes.dex,manipulator,['dexmerge']
com.cryptonator.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.cryptonator.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.cryptonator.android.apk,classes.dex,compiler,['r8']
com.bitcoin.wallet.btc.testnet.apk,assets/audience_network.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check']"
com.bitcoin.wallet.btc.testnet.apk,assets/audience_network.dex,compiler,['dexlib 1.x']
com.bitcoin.wallet.btc.testnet.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'possible VM check']"
com.bitcoin.wallet.btc.testnet.apk,classes.dex,compiler,['r8']
com.bitcoin.wallet.btc.testnet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitcoin.wallet.btc.testnet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.bitcoin.wallet.btc.testnet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitzhash.wallet.bitcoin.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.bitzhash.wallet.bitcoin.apk,classes.dex,compiler,['r8']
com.bitzhash.wallet.bitcoin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.aspanta.emcsec.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.aspanta.emcsec.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.aspanta.emcsec.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coinorbis.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'possible Build.SERIAL check']"
com.coinorbis.wallet.apk,classes.dex,compiler,['dx']
pe.bluemountain419.jungledex.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
pe.bluemountain419.jungledex.apk,classes.dex,compiler,['r8']
pe.bluemountain419.jungledex.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
pe.bluemountain419.jungledex.apk,classes2.dex,anti_disassembly,['illegal class name']
pe.bluemountain419.jungledex.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
pe.bluemountain419.jungledex.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.krypto.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.krypto.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.bitcoinblockchain.suyd.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.bitcoinblockchain.suyd.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.cwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.cwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check', 'possible ro.secure check', 'possible VM check']"
com.cwallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.cwallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.delieverme.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.delieverme.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.allcoinwallet.allcoinwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.allcoinwallet.allcoinwallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.allcoinwallet.allcoinwallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.allcoinwallet.allcoinwallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.allcoinwallet.allcoinwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.allcoinwallet.allcoinwallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.erdtoken.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.erdtoken.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.erdtoken.android.apk,classes.dex,compiler,['r8']
io.totalcoin.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.totalcoin.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check']"
io.totalcoin.wallet.apk,classes.dex,compiler,['r8']
io.totalcoin.wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
io.totalcoin.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.credtech.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.credtech.apk,classes.dex,compiler,['r8']
io.kompasswallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.kompasswallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
io.kompasswallet.apk,classes.dex,compiler,['r8']
com.bitcoinindia.Btciapp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitcoinindia.Btciapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check']"
com.bitcoinindia.Btciapp.apk,classes.dex,compiler,['r8']
zapsolutions.zap.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
zapsolutions.zap.apk,classes.dex,compiler,['r8']
zapsolutions.zap.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
zapsolutions.zap.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.cryptowallet.deviantx.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.cryptowallet.deviantx.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.cryptowallet.deviantx.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.TAGS check', 'network operator name check']"
com.cryptowallet.deviantx.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.monederoapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'SIM operator check']"
com.monederoapp.apk,classes.dex,compiler,['r8']
com.monederoapp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
lt.spectrofinance.spectrocoin.android.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
lt.spectrofinance.spectrocoin.android.wallet.apk,classes.dex,compiler,['r8']
lt.spectrofinance.spectrocoin.android.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
lt.spectrofinance.spectrocoin.android.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
lt.spectrofinance.spectrocoin.android.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
lt.spectrofinance.spectrocoin.android.wallet.apk,classes3.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.BOARD check', 'Build.TAGS check']"
lt.spectrofinance.spectrocoin.android.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
everex.transfer.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
everex.transfer.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
everex.transfer.apk,classes.dex,compiler,['dx']
mw.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
mw.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
mw.org.freewallet.app.apk,classes.dex,compiler,['r8']
mw.org.freewallet.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
mw.org.freewallet.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.alpha.wallet.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'possible VM check']"
com.alpha.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.alpha.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.alpha.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.alpha.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.alpha.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.leadwallet.io.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'SIM operator check']"
com.leadwallet.io.apk,classes.dex,compiler,['r8']
com.leadwallet.io.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.leadwallet.io.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.leadwallet.io.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.leadwallet.io.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitorzo.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible ro.secure check', 'possible VM check']"
com.bitorzo.wallet.apk,classes.dex,compiler,['r8']
com.lingxi.bexplus.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
com.lingxi.bexplus.apk,classes.dex,compiler,['r8']
com.lingxi.bexplus.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.lingxi.bexplus.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.lingxi.bexplus.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.lingxi.bexplus.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.lingxi.bexplus.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.portto.blocto.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.portto.blocto.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.portto.blocto.apk,classes.dex,compiler,['r8']
com.portto.blocto.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.portto.blocto.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'network operator name check']"
com.portto.blocto.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.portto.blocto.apk,classes4.dex,compiler,['r8']
com.elrond.maiar.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.kernel.qemu check']"
com.elrond.maiar.wallet.apk,classes.dex,compiler,['r8']
com.elrond.maiar.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.elrond.maiar.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.elrond.maiar.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.elrond.maiar.wallet.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.elrond.maiar.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.elrond.maiar.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.lumicollect.android.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'possible VM check']"
com.lumicollect.android.apk,classes.dex,compiler,['r8']
com.lumicollect.android.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.lumicollect.android.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.lumicollect.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.lumicollect.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.lumicollect.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.lumicollect.android.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
io.eidoo.wallet.prodnet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.eidoo.wallet.prodnet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
io.eidoo.wallet.prodnet.apk,classes.dex,compiler,['r8']
io.eidoo.wallet.prodnet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.eidoo.wallet.prodnet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
io.eidoo.wallet.prodnet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.eidoo.wallet.prodnet.apk,classes3.dex,anti_vm,['Build.TAGS check']
io.eidoo.wallet.prodnet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.blocktrail.mywallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.blocktrail.mywallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.blocktrail.mywallet.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.blocktrail.mywallet.apk,classes.dex,manipulator,['dexmerge']
com.prizmbit.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.prizmbit.apk,classes.dex,compiler,['r8']
com.prizmbit.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.prizmbit.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.prizmbit.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.sparkpoint.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.sparkpoint.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.xufagroup.cryptowallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.xufagroup.cryptowallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.xufagroup.cryptowallet.apk,classes.dex,compiler,['r8']
com.xufagroup.cryptowallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
com.xufagroup.cryptowallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.eosnova.wallet.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.eosnova.wallet.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
io.eosnova.wallet.android.apk,classes.dex,compiler,['r8']
io.eosnova.wallet.android.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
io.eosnova.wallet.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bolowallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bolowallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.bolowallet.apk,classes.dex,compiler,['r8']
com.atlas.mobile.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.atlas.mobile.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible ro.secure check']"
com.atlas.mobile.wallet.apk,classes.dex,compiler,['r8']
mn.godeal.gopay.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
mn.godeal.gopay.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
mn.godeal.gopay.apk,classes.dex,compiler,['dx (possible dexmerge)']
mn.godeal.gopay.apk,classes.dex,manipulator,['dexmerge']
com.btcc.mobiwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check']"
com.btcc.mobiwallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.btcc.mobiwallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'possible ro.secure check', 'emulator file check']"
com.btcc.mobiwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.btcc.mobiwallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.zengo.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'possible VM check']"
com.zengo.wallet.apk,classes.dex,compiler,['r8']
com.zengo.wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.zengo.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.zengo.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.zengo.wallet.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.zengo.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.lumiwallet.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.lumiwallet.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'network operator name check']"
com.lumiwallet.android.apk,classes.dex,compiler,['r8']
com.lumiwallet.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.maxxwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.maxxwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'network operator name check', 'possible VM check']"
com.maxxwallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.maxxwallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.maxxwallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.maxxwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.atomicwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.atomicwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
io.atomicwallet.apk,classes.dex,compiler,['r8']
com.masterbitexpress.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.masterbitexpress.wallet.apk,classes.dex,compiler,['r8']
com.masterbitexpress.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.zixipay.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.zixipay.wallet.apk,classes.dex,compiler,['r8']
piuk.blockchain.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
piuk.blockchain.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
piuk.blockchain.android.apk,classes.dex,compiler,['r8']
piuk.blockchain.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check']"
piuk.blockchain.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
piuk.blockchain.android.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check']"
piuk.blockchain.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.zelcash.zelcore.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.zelcash.zelcore.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.zelcash.zelcore.apk,classes.dex,compiler,['r8']
com.quppy.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'network operator name check']"
com.quppy.apk,classes.dex,compiler,['r8']
com.quppy.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.quppy.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.quppy.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.quppy.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.quppy.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.quppy.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.sixwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.sixwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.sixwallet.apk,classes.dex,compiler,['r8']
com.sixwallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.sixwallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.sixwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
de.fuf.bitbucks.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check']"
de.fuf.bitbucks.apk,classes.dex,compiler,['r8']
com.exchangily.wallet.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
com.exchangily.wallet.apk,classes.dex,compiler,['r8']
com.airwalletofficial.air_wallet.apk,classes.dex,compiler,['r8']
com.airbitz.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'network operator name check']"
com.airbitz.apk,classes.dex,compiler,"['Jack 4.12', 'dx']"
com.wirex.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check']"
com.wirex.apk,classes.dex,compiler,['r8']
com.wirex.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.wirex.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.wirex.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible ro.secure check', 'possible VM check']"
com.wirex.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.wirex.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.wirex.apk,classes4.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'network operator name check']"
com.wirex.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.wirex.apk,classes5.dex,anti_vm,['Build.MANUFACTURER check']
com.wirex.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.polehin.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.polehin.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.polehin.android.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.polehin.android.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.polehin.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.polehin.android.apk,classes2.dex,compiler,['dx']
co.busha.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
co.busha.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check']"
co.busha.android.apk,classes.dex,compiler,['r8']
com.liberty.jaxx.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.liberty.jaxx.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check']"
com.liberty.jaxx.apk,classes.dex,compiler,['r8']
com.valr.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.valr.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.valr.app.apk,classes.dex,compiler,['r8']
com.valr.app.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.valr.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.valr.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.agile.walletapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible VM check']"
com.agile.walletapp.apk,classes.dex,compiler,['r8']
com.agile.walletapp.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.agile.walletapp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.agile.walletapp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.cyberblock.cyberblockmobile.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.cyberblock.cyberblockmobile.apk,classes.dex,anti_vm,['Build.FINGERPRINT check']
com.cyberblock.cyberblockmobile.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.cyberblock.cyberblockmobile.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible VM check']"
com.cyberblock.cyberblockmobile.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.buyucoinApp.buyucoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.buyucoinApp.buyucoin.apk,classes.dex,compiler,['r8']
com.buyucoinApp.buyucoin.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.buyucoinApp.buyucoin.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.buyucoinApp.buyucoin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.hotbtc.exchange.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.hotbtc.exchange.apk,classes.dex,compiler,['r8']
com.hotbtc.exchange.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.hotbtc.exchange.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.hotbtc.exchange.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.ellipal.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check', 'subscriber ID check']"
com.ellipal.wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.ellipal.wallet.apk,classes.dex,obfuscator,['unreadable field names']
com.ellipal.wallet.apk,classes2.dex,compiler,['dx']
com.bitpay.coincloud.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitpay.coincloud.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check']"
com.bitpay.coincloud.apk,classes.dex,compiler,['r8']
com.sixpencer.simplework.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.sixpencer.simplework.apk,classes.dex,compiler,['r8']
com.sixpencer.simplework.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.sixpencer.simplework.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'emulator file check', 'possible VM check']"
com.sixpencer.simplework.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.sixpencer.simplework.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'possible ro.secure check', 'emulator file check', 'possible VM check']"
com.sixpencer.simplework.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.sixpencer.simplework.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.sixpencer.simplework.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.dapppocket.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check']"
com.dapppocket.apk,classes.dex,compiler,['r8']
com.dapppocket.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
global.bithumb.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'SIM operator check']"
global.bithumb.android.apk,classes.dex,compiler,['r8']
global.bithumb.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'possible ro.secure check']"
global.bithumb.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
global.bithumb.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
global.bithumb.android.apk,classes4.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
global.bithumb.android.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
global.bithumb.android.apk,lib/arm64-v8a/libumeng-spy.so,anti_vm,['emulator file check']
global.bithumb.android.apk,lib/x86/libumeng-spy.so,anti_vm,['emulator file check']
com.BitcoinWalletExchange.org.apk,classes.dex,compiler,['r8']
com.loafwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.loafwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.DEVICE check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.loafwallet.apk,classes.dex,compiler,['r8']
com.loafwallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.loafwallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.loafwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.loafwallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
net.coinpayments.coinpaymentsapp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'network operator name check', 'possible VM check']"
net.coinpayments.coinpaymentsapp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.ownrwallet.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
com.ownrwallet.wallet.apk,classes.dex,compiler,['r8']
com.ownrwallet.wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.ownrwallet.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.ownrwallet.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.ownrwallet.wallet.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.ownrwallet.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.ownrwallet.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
one.mixin.messenger.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
one.mixin.messenger.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
one.mixin.messenger.apk,classes.dex,compiler,['r8']
one.mixin.messenger.apk,classes2.dex,compiler,['r8']
one.mixin.messenger.apk,classes3.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
one.mixin.messenger.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
org.electrum.electrum.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
org.electrum.electrum.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.latoken.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.latoken.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'ro.hardware check', 'ro.kernel.qemu check', 'possible VM check']"
com.latoken.wallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.latoken.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.latoken.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.latoken.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.latoken.wallet.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.latoken.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.latoken.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.savl.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
com.savl.apk,classes.dex,compiler,['r8']
com.savl.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.savl.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check']"
com.savl.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.savl.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.savl.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
app.bankowallet.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check']"
app.bankowallet.android.apk,classes.dex,compiler,['r8 without marker (suspicious)']
app.bankowallet.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
app.bankowallet.android.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
app.bankowallet.android.apk,classes3.dex,anti_disassembly,['illegal class name']
app.bankowallet.android.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check']"
app.bankowallet.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
bitmesh.volt.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check']"
bitmesh.volt.wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
bitmesh.volt.wallet.apk,lib/armeabi-v7a/libFaceSDK.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.ccwalletapp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.ccwalletapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.ccwalletapp.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.ccwalletapp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coincorner.app.crypt.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'network operator name check', 'possible VM check']"
com.coincorner.app.crypt.apk,classes.dex,compiler,['r8']
com.pint.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.pint.app.apk,classes.dex,compiler,['r8']
com.pint.app.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.pint.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible ro.secure check', 'possible VM check']"
com.pint.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.defi.wallet.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'ro.kernel.qemu check']"
com.defi.wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.defi.wallet.apk,classes.dex,obfuscator,['DexGuard']
com.defi.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.defi.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'possible ro.secure check']"
com.defi.wallet.apk,classes2.dex,compiler,['dx']
com.defi.wallet.apk,classes3.dex,compiler,['dx']
com.bitzapp.apk,classes.dex,anti_vm,"['Build.HARDWARE check', 'possible VM check']"
com.bitzapp.apk,classes.dex,compiler,['r8']
blackdollar.bdlr.token.coin.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
blackdollar.bdlr.token.coin.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.inigma.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.inigma.wallet.apk,classes.dex,compiler,['r8']
com.mycelium.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.mycelium.wallet.apk,classes.dex,compiler,['r8']
com.mycelium.wallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.mycelium.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'Build.TAGS check']"
com.mycelium.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.mycelium.wallet.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.mycelium.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.stasis.stasiswallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.stasis.stasiswallet.apk,classes.dex,compiler,['r8']
com.stasis.stasiswallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.stasis.stasiswallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.stasis.stasiswallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.stasis.stasiswallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.blockchain.bitcoin.wallet.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.blockchain.bitcoin.wallet.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.blockchain.bitcoin.wallet.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.blockchain.bitcoin.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.blockchain.bitcoin.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check']"
com.blockchain.bitcoin.wallet.apk,classes.dex,compiler,['r8']
com.blockchain.bitcoin.wallet.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'SIM operator check', 'network operator name check']"
com.blockchain.bitcoin.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.blockchain.bitcoin.wallet.apk,classes3.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.BOARD check']"
com.blockchain.bitcoin.wallet.apk,classes3.dex,compiler,['r8']
com.bitcoin.wallet.btc.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitcoin.wallet.btc.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.bitcoin.wallet.btc.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.bitcoin.wallet.btc.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitcoin.wallet.btc.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check']"
com.bitcoin.wallet.btc.apk,classes.dex,compiler,['r8']
com.bitcoin.wallet.btc.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'SIM operator check', 'network operator name check']"
com.bitcoin.wallet.btc.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitcoin.wallet.btc.apk,classes3.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.BOARD check']"
com.bitcoin.wallet.btc.apk,classes3.dex,compiler,['r8']
com.ptpwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.ptpwallet.apk,classes.dex,compiler,['r8']
com.ptpwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.blockchain.wallet.btc.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.blockchain.wallet.btc.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
com.blockchain.wallet.btc.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
com.blockchain.wallet.btc.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.blockchain.wallet.btc.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check']"
com.blockchain.wallet.btc.apk,classes.dex,compiler,['r8']
com.blockchain.wallet.btc.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.blockchain.wallet.btc.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'SIM operator check', 'network operator name check']"
com.blockchain.wallet.btc.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.blockchain.wallet.btc.apk,classes3.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.BOARD check']"
com.blockchain.wallet.btc.apk,classes3.dex,compiler,['r8']
org.toshi.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.toshi.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
org.toshi.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.toshi.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
org.toshi.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check']"
org.toshi.apk,classes.dex,compiler,['r8']
org.toshi.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.silenca.amlsafe.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.silenca.amlsafe.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.silenca.amlsafe.apk,classes.dex,compiler,['r8']
com.silenca.amlsafe.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.TAGS check']"
com.silenca.amlsafe.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.silenca.amlsafe.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.silenca.amlsafe.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.zipwallet.app.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'network operator name check', 'possible VM check']"
com.zipwallet.app.apk,classes.dex,compiler,['r8']
com.zipwallet.app.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
com.zipwallet.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.zipwallet.app.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.zipwallet.app.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.zipwallet.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.paxful.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.paxful.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'possible ro.secure check']"
com.paxful.wallet.apk,classes.dex,compiler,['r8']
com.paxful.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.paxful.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.paxful.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.paymintlabs.paymint.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
com.paymintlabs.paymint.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.breadwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.breadwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.breadwallet.apk,classes.dex,compiler,['r8']
com.breadwallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.breadwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.breadwallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitcoinblack.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible ro.secure check', 'possible VM check']"
com.bitcoinblack.wallet.apk,classes.dex,compiler,['r8']
com.ninjacoin.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.ninjacoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.ninjacoin.apk,classes.dex,compiler,['dexlib 2.x']
com.ninjacoin.apk,classes2.dex,compiler,['dexlib 2.x']
com.signkeys.wallet.portfolio.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.DEVICE check', 'Build.PRODUCT check', 'network operator name check', 'possible VM check']"
com.signkeys.wallet.portfolio.apk,classes.dex,compiler,['r8']
com.signkeys.wallet.portfolio.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.signkeys.wallet.portfolio.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.signkeys.wallet.portfolio.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.bitcoinox.bitcoinoxwallet.apk,classes.dex,compiler,['r8']
com.Android.Inc.bitwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.Android.Inc.bitwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.Android.Inc.bitwallet.apk,classes.dex,compiler,['r8']
com.Android.Inc.bitwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.guapcoin.multiwallet.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
org.guapcoin.multiwallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.androidwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.androidwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.androidwallet.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.androidwallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.androidwallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.androidwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.androidwallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.coinfalcon.mobile.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'possible VM check']"
com.coinfalcon.mobile.apk,classes.dex,compiler,['r8']
com.coinfalcon.mobile.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.coinfalcon.mobile.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.coinfalcon.mobile.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coinfalcon.mobile.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinfalcon.mobile.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.coinfalcon.mobile.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.coinfalcon.mobile.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.ripio.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.ripio.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.kernel.qemu check']"
com.ripio.android.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.ripio.android.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.ripio.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
com.ripio.android.apk,classes2.dex,compiler,['dx']
com.ripio.android.apk,classes3.dex,compiler,['dx']
co.bacoor.keyring.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'possible VM check']"
co.bacoor.keyring.apk,classes.dex,compiler,['r8']
co.bacoor.keyring.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
co.bacoor.keyring.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
co.bacoor.keyring.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitnovo.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.bitnovo.app.apk,classes.dex,compiler,['r8']
com.bitnovo.app.apk,classes.dex,obfuscator,['unreadable method names']
com.bitnovo.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.bitnovo.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitnovo.app.apk,classes2.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.bitnovo.app.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
com.bitnovo.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitnovo.app.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
com.bitnovo.app.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.bitnovo.app.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.mercuryo.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.kernel.qemu check', 'possible VM check']"
com.mercuryo.app.apk,classes.dex,compiler,['r8']
com.mercuryo.app.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.mercuryo.app.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.mercuryo.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.mercuryo.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.mercuryo.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.mercuryo.app.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
com.mercuryo.app.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.mercuryo.app.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
kr.co.keypair.keywalletTouch.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
kr.co.keypair.keywalletTouch.apk,classes.dex,compiler,['r8']
kr.co.keypair.keywalletTouch.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.lobstr.client.apk,classes4.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.lobstr.client.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.lobstr.client.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.lobstr.client.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.lobstr.client.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.lobstr.client.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.lobstr.client.apk,classes.dex,compiler,['r8']
com.lobstr.client.apk,classes2.dex,compiler,['r8']
io.rapids.network.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
io.rapids.network.wallet.apk,classes.dex,compiler,['r8']
io.rapids.network.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.ethlimited.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.ethlimited.apk,classes.dex,compiler,['r8']
com.ethlimited.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.t7.wether.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.t7.wether.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.t7.wether.apk,classes.dex,compiler,['dx']
com.qcan.mobile.bitcoin.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.qcan.mobile.bitcoin.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.qcan.mobile.bitcoin.wallet.apk,classes.dex,compiler,['r8']
co.satoshiwallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
co.satoshiwallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
co.satoshiwallet.app.apk,classes.dex,compiler,['r8']
co.satoshiwallet.app.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
co.satoshiwallet.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
co.satoshiwallet.app.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bit.btcwallet.apk,classes.dex,compiler,['r8']
io.safepal.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible VM check']"
io.safepal.wallet.apk,classes.dex,compiler,['r8']
com.b4uwallet.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.b4uwallet.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.b4uwallet.android.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.kesemwalletapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.kesemwalletapp.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.kesemwalletapp.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.kesemwalletapp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'subscriber ID check', 'possible VM check']"
com.kesemwalletapp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.kr.iotrust.dcent.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'device ID check', 'possible VM check']"
com.kr.iotrust.dcent.wallet.apk,classes.dex,compiler,['r8']
com.kr.iotrust.dcent.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.kr.iotrust.dcent.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.kr.iotrust.dcent.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.kr.iotrust.dcent.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
com.kr.iotrust.dcent.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.kr.iotrust.dcent.wallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
exchange.einstein.mobile.release.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
exchange.einstein.mobile.release.apk,classes.dex,compiler,['r8']
com.XcelTrip.XcelPay.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.XcelTrip.XcelPay.apk,classes.dex,compiler,['r8']
com.XcelTrip.XcelPay.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.XcelTrip.XcelPay.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.XcelTrip.XcelPay.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.XcelTrip.XcelPay.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.XcelTrip.XcelPay.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.XcelTrip.XcelPay.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.enjin.mobile.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.enjin.mobile.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check', 'possible VM check']"
com.enjin.mobile.wallet.apk,classes.dex,compiler,['dx']
tw.org.freewallet.app.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
tw.org.freewallet.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check']"
tw.org.freewallet.app.apk,classes.dex,compiler,['dx (possible dexmerge)']
tw.org.freewallet.app.apk,classes.dex,manipulator,['dexmerge']
com.getchange.wallet.cordova.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'possible VM check']"
com.getchange.wallet.cordova.apk,classes.dex,compiler,['r8']
com.wallet.crypto.trustapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.wallet.crypto.trustapp.apk,classes.dex,compiler,['r8']
com.wallet.crypto.trustapp.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.wallet.crypto.trustapp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.wallet.crypto.trustapp.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.wallet.crypto.trustapp.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.wallet.crypto.trustapp.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.wallet.crypto.trustapp.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.fox.one.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'network operator name check']"
com.fox.one.apk,classes.dex,compiler,['r8']
com.fox.one.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check']"
com.fox.one.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.fox.one.apk,classes3.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check']"
com.fox.one.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.dowallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check', 'possible VM check']"
com.dowallet.apk,classes.dex,compiler,['r8']
com.dowallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.dowallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.dowallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.dowallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.dowallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.crypto.multiwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.crypto.multiwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.crypto.multiwallet.apk,classes.dex,compiler,['r8']
org.topnetwork.hiwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
org.topnetwork.hiwallet.apk,classes.dex,compiler,['r8']
org.topnetwork.hiwallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.topnetwork.hiwallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
org.topnetwork.hiwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.topnetwork.hiwallet.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
org.topnetwork.hiwallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
org.topnetwork.hiwallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
etherio.wallet.com.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check', 'SIM operator check']"
etherio.wallet.com.apk,classes.dex,compiler,['r8']
etherio.wallet.com.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
etherio.wallet.com.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
etherio.wallet.com.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
etherio.wallet.com.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'network operator name check', 'possible VM check']"
etherio.wallet.com.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
etherio.wallet.com.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.coinbase.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check', 'possible VM check']"
com.coinbase.android.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.coinbase.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.coinbase.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coinbase.android.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinbase.android.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.coinbase.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.coinbase.android.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'emulator file check']"
com.coinbase.android.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
fr.acinq.phoenix.mainnet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
fr.acinq.phoenix.mainnet.apk,classes.dex,compiler,['r8']
fr.acinq.phoenix.mainnet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
fr.acinq.phoenix.mainnet.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
fr.acinq.phoenix.mainnet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check']"
fr.acinq.phoenix.mainnet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
fr.acinq.phoenix.mainnet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
org.coinid.wallet.tbtc.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.coinid.wallet.tbtc.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
org.coinid.wallet.tbtc.apk,classes.dex,compiler,['r8']
org.coinid.wallet.tgrs.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.coinid.wallet.tgrs.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
org.coinid.wallet.tgrs.apk,classes.dex,compiler,['r8']
org.coinid.wallet.btc.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.coinid.wallet.btc.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
org.coinid.wallet.btc.apk,classes.dex,compiler,['r8']
org.coinid.wallet.grs.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.coinid.wallet.grs.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
org.coinid.wallet.grs.apk,classes.dex,compiler,['r8']
org.coinid.wallet.xmy.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.coinid.wallet.xmy.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
org.coinid.wallet.xmy.apk,classes.dex,compiler,['r8']
com.eofinance.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.eofinance.apk,classes.dex,compiler,['r8']
com.eofinance.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.eofinance.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
com.eofinance.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
org.electroncash.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
org.electroncash.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
org.electroncash.wallet.apk,classes.dex,compiler,['r8']
cash.klever.blockchain.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
cash.klever.blockchain.wallet.apk,classes.dex,compiler,['r8']
cash.klever.blockchain.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
cash.klever.blockchain.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
cash.klever.blockchain.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
cash.klever.blockchain.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
io.goldwallet.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.goldwallet.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check']"
io.goldwallet.wallet.apk,classes.dex,compiler,['r8']
io.goldwallet.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.goldwallet.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check', 'possible VM check']"
io.goldwallet.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.goldwallet.wallet.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.goldwallet.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
io.goldwallet.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
it.inbitcoin.altana.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
it.inbitcoin.altana.apk,classes.dex,compiler,['r8']
com.top1.group.international.android.apk,,packer,['Jiagu']
com.top1.group.international.android.apk,classes.dex,compiler,['dexlib 2.x']
com.top1.group.international.android.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.bitrue.currency.exchange.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.bitrue.currency.exchange.apk,classes.dex,compiler,['r8']
com.bitrue.currency.exchange.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitrue.currency.exchange.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'possible ro.secure check', 'possible VM check']"
com.bitrue.currency.exchange.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.xcoex.mobile.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'device ID check', 'subscriber ID check', 'ro.product.device check', 'ro.kernel.qemu check', 'emulator file check']"
com.xcoex.mobile.apk,classes.dex,compiler,['r8']
com.xcoex.mobile.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.xcoex.mobile.apk,classes4.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.xcoex.mobile.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check']"
com.xcoex.mobile.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.xcoex.mobile.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.xcoex.mobile.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.xcoex.mobile.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.xcoex.mobile.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible ro.secure check']"
com.xcoex.mobile.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
jp.coincheck.android.apk,lib/arm64-v8a/libfsasm_jni.so,obfuscator,['Arxan']
jp.coincheck.android.apk,lib/armeabi-v7a/libfsasm_jni.so,obfuscator,['Arxan']
jp.coincheck.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
jp.coincheck.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
jp.coincheck.android.apk,classes.dex,compiler,['r8']
jp.coincheck.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.counos.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.counos.apk,classes.dex,compiler,['r8']
com.counos.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.counos.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
ceyronmoney.ceyronwallet.ceyroncryptowallet.ceyrontoken.ceytoken.ceycoin.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.TAGS check']"
ceyronmoney.ceyronwallet.ceyroncryptowallet.ceyrontoken.ceytoken.ceycoin.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.atomex.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible VM check']"
com.atomex.android.apk,classes.dex,compiler,['r8']
com.raido_wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.raido_wallet.apk,classes.dex,compiler,['r8']
com.raido_wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.raido_wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.raido_wallet.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.raido_wallet.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.raido_wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitcoinofamerica.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.bitcoinofamerica.wallet.apk,classes.dex,compiler,['r8']
com.bitcoinofamerica.wallet.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
com.bitcoinofamerica.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bixin.bixin_android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.bixin.bixin_android.apk,classes.dex,compiler,['r8']
com.bixin.bixin_android.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.bixin.bixin_android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bixin.bixin_android.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'possible ro.secure check', 'emulator file check', 'possible VM check']"
com.bixin.bixin_android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.coinomi.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check']"
com.coinomi.wallet.apk,classes.dex,compiler,['r8']
com.coinomi.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinomi.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible ro.secure check', 'possible VM check']"
com.coinomi.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.coinomi.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.coinomi.wallet.apk,classes4.dex,compiler,['r8']
net.walletharcomia.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible VM check']"
net.walletharcomia.android.apk,classes.dex,compiler,['r8']
net.walletharcomia.android.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
net.walletharcomia.android.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
net.walletharcomia.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.muun.apollo.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.muun.apollo.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
io.muun.apollo.apk,classes.dex,compiler,['r8']
io.muun.apollo.apk,classes2.dex,anti_vm,"['Build.TAGS check', 'possible ro.secure check']"
io.muun.apollo.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitazza.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitazza.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check']"
com.bitazza.android.apk,classes.dex,compiler,['r8']
capital.spatium.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
capital.spatium.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check']"
capital.spatium.wallet.apk,classes.dex,compiler,['r8']
com.oracle.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.oracle.wallet.apk,classes.dex,compiler,['r8']
com.oracle.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.oracle.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.oracle.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.oracle.wallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
co.edgesecure.app.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
co.edgesecure.app.apk,classes.dex,compiler,['r8']
co.edgesecure.app.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
co.edgesecure.app.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.hagglex.hagglex.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.hagglex.hagglex.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.bitpapa.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bitpapa.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.bitpapa.apk,classes.dex,compiler,['r8']
io.hexawallet.hexa.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.hexawallet.hexa.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check']"
io.hexawallet.hexa.apk,classes.dex,compiler,['r8']
io.hexawallet.hexa.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.hexawallet.hexa.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check', 'possible VM check']"
io.hexawallet.hexa.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.hexawallet.hexa.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
io.hexawallet.hexa.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
kuna.beta.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
kuna.beta.apk,classes.dex,compiler,['r8']
kuna.beta.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
kuna.beta.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
kuna.beta.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
kuna.beta.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
kuna.beta.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.callsfreecalls.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check']"
com.callsfreecalls.android.apk,classes.dex,compiler,['r8']
com.callsfreecalls.android.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.callsfreecalls.android.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.callsfreecalls.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.callsfreecalls.android.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'ro.product.device check', 'ro.kernel.qemu check', 'possible ro.secure check', 'emulator file check']"
com.callsfreecalls.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.callsfreecalls.android.apk,classes4.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.callsfreecalls.android.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
com.callsfreecalls.android.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.callsfreecalls.android.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
vip.mytokenpocket.apk,,packer,['Ijiami']
vip.mytokenpocket.apk,assets/ijm_lib/armeabi/libexecmain.so,packer,"['UPX (unknown, modified)']"
vip.mytokenpocket.apk,assets/ijm_lib/armeabi/libexec.so,packer,"['UPX (unknown, modified)']"
vip.mytokenpocket.apk,classes.dex,compiler,['dexlib 2.x']
com.beecrypt.beecrypthd.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.beecrypt.beecrypthd.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.beecrypt.beecrypthd.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.beecrypt.beecrypthd.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.beecrypt.beecrypthd.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.beecrypt.beecrypthd.apk,classes.dex,compiler,['r8']
com.beecrypt.beecrypthd.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.beecrypt.beecrypthd.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.beecrypt.beecrypthd.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.beecrypt.beecrypthd.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
im.token.app99.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
im.token.app99.apk,classes.dex,compiler,['dexlib 2.x']
im.token.app99.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
im.token.app99.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'subscriber ID check', 'possible VM check']"
im.token.app99.apk,classes2.dex,compiler,['dexlib 2.x']
im.token.app99.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'possible VM check']"
im.token.app99.apk,classes3.dex,compiler,['dexlib 2.x']
im.token.app99.apk,classes4.dex,compiler,['dexlib 2.x']
im.token.app99.apk,classes5.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible ro.secure check']"
im.token.app99.apk,classes5.dex,compiler,['dexlib 2.x']
com.incognito.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.incognito.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.incognito.wallet.apk,classes.dex,compiler,['r8']
com.incognito.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
com.incognito.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.incognito.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.youhodler.youhodler.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.youhodler.youhodler.apk,classes.dex,compiler,['r8']
com.youhodler.youhodler.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.youhodler.youhodler.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.youhodler.youhodler.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.youhodler.youhodler.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.youhodler.youhodler.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.youhodler.youhodler.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.neobitcoin.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
com.neobitcoin.wallet.apk,classes.dex,compiler,['r8']
com.neobitcoin.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.neobitcoin.wallet.apk,classes2.dex,anti_disassembly,['illegal class name']
com.neobitcoin.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check']"
com.neobitcoin.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitcoin.mwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'network operator name check', 'device ID check']"
com.bitcoin.mwallet.apk,classes.dex,compiler,['r8']
com.bitcoin.mwallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.bitcoin.mwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.bitcoin.mwallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitcoin.mwallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.bitcoin.mwallet.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
cobo.wallet.apk,classes.dex,compiler,['dexlib 2.x']
com.kubi.kucoin.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.kubi.kucoin.apk,classes.dex,compiler,['r8']
com.kubi.kucoin.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'possible VM check']"
com.kubi.kucoin.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.kubi.kucoin.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.kubi.kucoin.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.kubi.kucoin.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'emulator file check']"
com.kubi.kucoin.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.kubi.kucoin.apk,classes5.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.kubi.kucoin.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.kubi.kucoin.apk,lib/arm64-v8a/libdu.so,obfuscator,['Safeengine LLVM']
com.kubi.kucoin.apk,lib/arm64-v8a/libsgmain.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.kubi.kucoin.apk,lib/arm64-v8a/libsgmiddletier.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.kubi.kucoin.apk,lib/arm64-v8a/libsgsecuritybody.so!classes.dex,anti_vm,['subscriber ID check']
com.kubi.kucoin.apk,lib/arm64-v8a/libsgsecuritybody.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.kubi.kucoin.apk,lib/armeabi-v7a/libdu.so,"dropper, packer",['UPX packed ELF embedded in ELF']
com.kubi.kucoin.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.kubi.kucoin.apk,lib/armeabi-v7a/libsgmiddletier.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.kubi.kucoin.apk,lib/armeabi-v7a/libsgsecuritybody.so!classes.dex,anti_vm,['subscriber ID check']
com.kubi.kucoin.apk,lib/armeabi-v7a/libsgsecuritybody.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.kubi.kucoin.apk,lib/armeabi/libdu.so,"dropper, packer",['UPX packed ELF embedded in ELF']
com.coinhako.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.coinhako.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.coinhako.apk,classes.dex,compiler,['r8']
com.coinhako.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.coinhako.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
com.coinhako.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
im.token.app.apk,,packer,['Jiagu']
im.token.app.apk,classes.dex,compiler,['dexlib 2.x']
com.plutus.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.plutus.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
com.plutus.wallet.apk,classes.dex,compiler,['r8']
com.plutus.wallet.apk,classes.dex,obfuscator,['DexGuard']
com.plutus.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check']"
com.plutus.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check']"
com.medishares.android.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes10.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes11.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes12.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes13.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes5.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
com.medishares.android.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes6.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.medishares.android.apk,classes6.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check', 'subscriber ID check']"
com.medishares.android.apk,classes6.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes7.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes8.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,classes9.dex,compiler,['r8 without marker (suspicious)']
com.medishares.android.apk,lib/arm64-v8a/libFaceSDK.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.medishares.android.apk,lib/armeabi-v7a/libFaceSDK.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.medishares.android.apk,lib/armeabi/libFaceSDK.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.trusteewallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.trusteewallet.apk,classes.dex,compiler,['r8']
com.trusteewallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.trusteewallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.trusteewallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.trusteewallet.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.trusteewallet.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.trusteewallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.ezdefi.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.ezdefi.apk,classes.dex,compiler,['r8']
com.ezdefi.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.ezdefi.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.ezdefi.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.ezdefi.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.ezdefi.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.crypterium.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check']"
com.crypterium.apk,classes.dex,compiler,['r8']
com.crypterium.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.crypterium.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.crypterium.apk,classes2.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.crypterium.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.crypterium.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.crypterium.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.crypterium.apk,classes4.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.crypterium.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
co.bacoor.android.hbwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
co.bacoor.android.hbwallet.apk,classes.dex,compiler,['r8']
co.bacoor.android.hbwallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
co.bacoor.android.hbwallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.theblockchain.coinus.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'possible VM check']"
com.theblockchain.coinus.wallet.apk,classes.dex,compiler,['r8']
com.theblockchain.coinus.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.theblockchain.coinus.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.theblockchain.coinus.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.theblockchain.coinus.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible VM check']"
com.theblockchain.coinus.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.theblockchain.coinus.wallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.theblockchain.coinus.wallet.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
com.theblockchain.coinus.wallet.apk,classes6.dex,compiler,['r8 without marker (suspicious)']
com.bitpie.apk,classes4.dex,compiler,['dx']
com.bitpie.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.bitpie.apk,classes3.dex,compiler,['dx']
com.bitpie.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.bitpie.apk,classes2.dex,compiler,['dx']
io.bluewallet.bluewallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check']"
io.bluewallet.bluewallet.apk,classes.dex,compiler,['r8']
io.bluewallet.bluewallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.bluewallet.bluewallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
io.bluewallet.bluewallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.bluewallet.bluewallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.dok.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
com.dok.wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.dok.wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.dok.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.dok.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.dok.wallet.apk,classes2.dex,compiler,['dx']
com.dok.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.dok.wallet.apk,classes3.dex,compiler,['dx']
com.dok.wallet.apk,classes4.dex,compiler,['dx']
com.dok.wallet.apk,classes5.dex,compiler,['dx']
com.pumapay.pumawallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
com.pumapay.pumawallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.pumapay.pumawallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.pumapay.pumawallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.pumapay.pumawallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.pumapay.pumawallet.apk,classes2.dex,compiler,['dx']
com.pumapay.pumawallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.pumapay.pumawallet.apk,classes3.dex,compiler,['dx']
com.pumapay.pumawallet.apk,classes4.dex,compiler,['dx']
com.pumapay.pumawallet.apk,classes5.dex,compiler,['dx']
com.drcrypto.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
com.drcrypto.wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.drcrypto.wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.drcrypto.wallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.drcrypto.wallet.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.drcrypto.wallet.apk,classes2.dex,compiler,['dx']
com.drcrypto.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.drcrypto.wallet.apk,classes3.dex,compiler,['dx']
com.drcrypto.wallet.apk,classes4.dex,compiler,['dx']
com.drcrypto.wallet.apk,classes5.dex,compiler,['dx']
com.iMe.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
com.iMe.android.apk,classes.dex,compiler,['r8']
com.iMe.android.apk,classes2.dex,compiler,['r8']
com.iMe.android.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.iMe.android.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'subscriber ID check', 'ro.product.device check', 'ro.kernel.qemu check', 'emulator file check', 'possible VM check']"
com.iMe.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.iMe.android.apk,classes4.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.HARDWARE check']"
com.iMe.android.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.mexcpro.client.apk,,packer,['SecNeo.A']
com.mexcpro.client.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.mexcpro.client.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.mexcpro.client.apk,classes.dex,compiler,['dexlib 2.x']
com.mexcpro.client.apk,lib/arm64-v8a/libsgmain.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.mexcpro.client.apk,lib/arm64-v8a/libsgmain.so!classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.mexcpro.client.apk,lib/arm64-v8a/libsgmiddletier.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.mexcpro.client.apk,lib/arm64-v8a/libsgsecuritybody.so!classes.dex,anti_vm,['subscriber ID check']
com.mexcpro.client.apk,lib/arm64-v8a/libsgsecuritybody.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.mexcpro.client.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.mexcpro.client.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.mexcpro.client.apk,lib/armeabi-v7a/libsgmiddletier.so!classes.dex,compiler,['unknown (please file detection issue!)']
com.mexcpro.client.apk,lib/armeabi-v7a/libsgsecuritybody.so!classes.dex,anti_vm,['subscriber ID check']
com.mexcpro.client.apk,lib/armeabi-v7a/libsgsecuritybody.so!classes.dex,compiler,['unknown (please file detection issue!)']
coin98.crypto.finance.media.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
coin98.crypto.finance.media.apk,classes.dex,compiler,['unknown (please file detection issue!)']
coin98.crypto.finance.media.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
coin98.crypto.finance.media.apk,classes2.dex,compiler,['dx']
coin98.crypto.finance.media.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
coin98.crypto.finance.media.apk,classes3.dex,compiler,['dx']
com.aax.exchange.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.aax.exchange.apk,classes.dex,compiler,['r8']
com.aax.exchange.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'SIM operator check']"
com.aax.exchange.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.aax.exchange.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.aax.exchange.apk,classes3.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.aax.exchange.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.aax.exchange.apk,classes4.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check']"
com.aax.exchange.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.aax.exchange.apk,classes5.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check']"
com.aax.exchange.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
io.infinito.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
io.infinito.wallet.apk,classes.dex,compiler,['r8']
io.infinito.wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
io.infinito.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
io.infinito.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
io.infinito.wallet.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
io.infinito.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.bitshield.bitshieldwallet.apk,classes.dex,anti_vm,"['Build.HARDWARE check', 'possible VM check']"
com.bitshield.bitshieldwallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.spot.spot.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.spot.spot.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check']"
com.spot.spot.apk,classes.dex,compiler,['r8']
com.spot.spot.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.spot.spot.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.spot.spot.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
asia.coins.mobile.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
asia.coins.mobile.apk,classes.dex,compiler,['r8']
asia.coins.mobile.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
asia.coins.mobile.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check']"
asia.coins.mobile.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.hconline.iso.apk,,obfuscator,['Obfuscator-LLVM version 3.5']
com.hconline.iso.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible ro.secure check', 'emulator file check']"
com.hconline.iso.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
com.hconline.iso.apk,lib/arm64-v8a/libFaceSDK.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.hconline.iso.apk,classes7.dex,compiler,['r8 without marker (suspicious)']
com.hconline.iso.apk,classes3.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.hconline.iso.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.hconline.iso.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check']"
com.hconline.iso.apk,classes.dex,compiler,['r8']
com.hconline.iso.apk,classes6.dex,compiler,['r8 without marker (suspicious)']
com.hconline.iso.apk,classes2.dex,anti_vm,['Build.MANUFACTURER check']
com.hconline.iso.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.hconline.iso.apk,classes5.dex,anti_vm,['Build.MANUFACTURER check']
com.hconline.iso.apk,classes5.dex,compiler,['r8 without marker (suspicious)']
it.airgap.wallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
it.airgap.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check']"
it.airgap.wallet.apk,classes.dex,compiler,['r8']
com.midasprotocol.wallet.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.midasprotocol.wallet.android.apk,classes.dex,compiler,['r8']
com.midasprotocol.wallet.android.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.midasprotocol.wallet.android.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.midasprotocol.wallet.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.midasprotocol.wallet.android.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.greenaddress.greenbits_android_wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.greenaddress.greenbits_android_wallet.apk,classes.dex,compiler,['r8']
com.mtpelerin.bridge.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'network operator name check', 'device ID check']"
com.mtpelerin.bridge.apk,classes.dex,compiler,['r8']
com.mtpelerin.bridge.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
com.mtpelerin.bridge.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.mtpelerin.bridge.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.mtpelerin.bridge.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
im.status.ethereum.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
im.status.ethereum.apk,classes.dex,compiler,['r8']
im.status.ethereum.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.BOARD check', 'Build.TAGS check']"
im.status.ethereum.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.binance.dev.apk,,packer,['yidun']
com.binance.dev.apk,lib/armeabi-v7a/libTMXProfiling-6.0-138-jni.so,obfuscator,['Arxan']
com.binance.dev.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
com.binance.dev.apk,classes.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.binance.dev.apk,classes2.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes3.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes4.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes5.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.binance.dev.apk,classes5.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.binance.dev.apk,classes5.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes6.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes7.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes8.dex,anti_vm,['Build.TAGS check']
com.binance.dev.apk,classes8.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes9.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes10.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'possible ro.secure check']"
com.binance.dev.apk,classes10.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes10.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.binance.dev.apk,classes11.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check']"
com.binance.dev.apk,classes11.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes11.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.binance.dev.apk,classes12.dex,anti_vm,['Build.TAGS check']
com.binance.dev.apk,classes12.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes13.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes14.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.TAGS check', 'network operator name check']"
com.binance.dev.apk,classes14.dex,compiler,['dexlib 2.x']
com.binance.dev.apk,classes14.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
fio.ecoin.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
fio.ecoin.wallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
network.celsius.wallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check', 'device ID check', 'ro.kernel.qemu check', 'possible ro.secure check', 'possible VM check']"
network.celsius.wallet.apk,classes.dex,compiler,['r8']
network.celsius.wallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
network.celsius.wallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'device ID check', 'possible VM check']"
network.celsius.wallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
network.celsius.wallet.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
network.celsius.wallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
network.celsius.wallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
app.elaphant.wallets.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
app.elaphant.wallets.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
app.elaphant.wallets.apk,classes.dex,compiler,['r8']
app.elaphant.wallets.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
app.elaphant.wallets.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'subscriber ID check', 'emulator file check', 'possible VM check']"
app.elaphant.wallets.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.eletac.tronwallet.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.eletac.tronwallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'Build.TAGS check', 'possible ro.secure check']"
com.eletac.tronwallet.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.eletac.tronwallet.apk,classes2.dex,compiler,['dx']
com.legendwd.hyperpayW.apk,,packer,['Jiagu']
com.legendwd.hyperpayW.apk,classes.dex,compiler,['dexlib 2.x']
com.legendwd.hyperpayW.apk,lib/arm64-v8a/libsgmain.so!classes.dex,anti_vm,['subscriber ID check']
com.legendwd.hyperpayW.apk,lib/arm64-v8a/libsgmain.so!classes.dex,compiler,['dx']
com.legendwd.hyperpayW.apk,lib/arm64-v8a/libsgsecuritybody.so!classes.dex,compiler,['dx']
com.legendwd.hyperpayW.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,anti_vm,['subscriber ID check']
com.legendwd.hyperpayW.apk,lib/armeabi-v7a/libsgmain.so!classes.dex,compiler,['dx']
com.legendwd.hyperpayW.apk,lib/armeabi-v7a/libsgsecuritybody.so!classes.dex,compiler,['dx']
com.quarkonium.qpocket.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'SIM operator check', 'subscriber ID check']"
com.quarkonium.qpocket.apk,classes.dex,compiler,['r8']
com.quarkonium.qpocket.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check', 'possible ro.secure check', 'emulator file check']"
com.quarkonium.qpocket.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.quarkonium.qpocket.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'subscriber ID check']"
com.quarkonium.qpocket.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
jp.co.smartapp.gowallet.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check']"
jp.co.smartapp.gowallet.apk,classes.dex,compiler,['r8']
jp.co.smartapp.gowallet.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
jp.co.smartapp.gowallet.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
jp.co.smartapp.gowallet.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible VM check']"
jp.co.smartapp.gowallet.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
jp.co.smartapp.gowallet.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
jp.co.smartapp.gowallet.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
jp.co.smartapp.gowallet.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
